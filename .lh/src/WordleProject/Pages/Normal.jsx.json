{
    "sourceFile": "src/WordleProject/Pages/Normal.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1700001280882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1700001288120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n const Normal = () => {\n     return (\n         < div >\n-            Normal\n+            Normal;\n         </div >\n     );\n }\n \n"
                },
                {
                    "date": 1700007128351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,50 @@\n-import React from 'react';\n+import React, { useState } from 'react';\n \n+const Normal = () => {\n+    const [userInput, setUserInput] = useState(['', '', '', '', '', '']);\n \n+    const handleInputChange = (index, value) => {\n+        // Update the state with the new input value\n+        const newInput = [...userInput];\n+        newInput[index] = value;\n+        setUserInput(newInput);\n+    };\n \n-const Normal = () => {\n+    const submitWord = () => {\n+        // Combine the user input to form the word\n+        const word = userInput.join('').toLowerCase();\n+        console.log('Submitted Word:', word);\n+\n+        // Add your logic to check the submitted word\n+        // For now, let's just log it to the console\n+    };\n+\n+    const resetGame = () => {\n+        // Reset the user input to empty\n+        setUserInput(['', '', '', '', '', '']);\n+    };\n+\n     return (\n-        < div >\n-            Normal;\n-        </div >\n+        <div>\n+            <div className=\"word-input\">\n+                {/* You can use the input elements for users to input the 6-letter word */}\n+                {userInput.map((value, index) => (\n+                    <input\n+                        key={index}\n+                        type=\"text\"\n+                        maxLength=\"1\"\n+                        value={value}\n+                        onChange={(e) => handleInputChange(index, e.target.value)}\n+                    />\n+                ))}\n+            </div>\n+\n+            <button onClick={submitWord}>Submit</button>\n+            <button onClick={resetGame}>Reset</button>\n+\n+            {/* Add other UI elements for displaying attempts, clues, etc. */}\n+        </div>\n     );\n-}\n+};\n \n export default Normal;\n"
                },
                {
                    "date": 1700007167774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,10 +38,10 @@\n                     />\n                 ))}\n             </div>\n \n-            <button onClick={submitWord}>Submit</button>\n-            <button onClick={resetGame}>Reset</button>\n+            <button className=\"navigation-button\" onClick={submitWord}>Submit</button>\n+            <button className=\"navigation-button\"  sonClick={resetGame}>Reset</button>\n \n             {/* Add other UI elements for displaying attempts, clues, etc. */}\n         </div>\n     );\n"
                },
                {
                    "date": 1700011644612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,11 +13,15 @@\n     const submitWord = () => {\n         // Combine the user input to form the word\n         const word = userInput.join('').toLowerCase();\n         console.log('Submitted Word:', word);\n-\n-        // Add your logic to check the submitted word\n-        // For now, let's just log it to the console\n+// Add your logic to check the length of the submitted word\n+if (word.length < 6) {\n+    // Update the UI to display a message for a short word\n+    alert('Word is too short. Please submit a longer word.');\n+    // You can add other UI updates as needed\n+    return; // Do not deduct any attempts for a short word\n+  }\n     };\n \n     const resetGame = () => {\n         // Reset the user input to empty\n"
                },
                {
                    "date": 1700011656774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     const submitWord = () => {\n         // Combine the user input to form the word\n         const word = userInput.join('').toLowerCase();\n         console.log('Submitted Word:', word);\n-        // Add your logic to check the length of the submitted word\n+        // Check the length of the submitted word\n         if (word.length < 6) {\n             // Update the UI to display a message for a short word\n             alert('Word is too short. Please submit a longer word.');\n             // You can add other UI updates as needed\n"
                },
                {
                    "date": 1700011694741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,54 +1,47 @@\n import React, { useState } from 'react';\n+import './Normal.css'; // Import your CSS file for styling\n \n const Normal = () => {\n-    const [userInput, setUserInput] = useState(['', '', '', '', '', '']);\n+  const [userInput, setUserInput] = useState(['', '', '', '', '', '']);\n \n-    const handleInputChange = (index, value) => {\n-        // Update the state with the new input value\n-        const newInput = [...userInput];\n-        newInput[index] = value;\n-        setUserInput(newInput);\n-    };\n+  const handleInputChange = (index, value) => {\n+    const newInput = [...userInput];\n+    newInput[index] = value;\n+    setUserInput(newInput);\n+  };\n \n-    const submitWord = () => {\n-        // Combine the user input to form the word\n-        const word = userInput.join('').toLowerCase();\n-        console.log('Submitted Word:', word);\n-        // Check the length of the submitted word\n-        if (word.length < 6) {\n-            // Update the UI to display a message for a short word\n-            alert('Word is too short. Please submit a longer word.');\n-            // You can add other UI updates as needed\n-            return; // Do not deduct any attempts for a short word\n-        }\n-    };\n+  const submitWord = () => {\n+    const word = userInput.join('').toLowerCase();\n+    console.log('Submitted Word:', word);\n+    // Add your logic to check the submitted word\n+  };\n \n-    const resetGame = () => {\n-        // Reset the user input to empty\n-        setUserInput(['', '', '', '', '', '']);\n-    };\n+  const resetGame = () => {\n+    setUserInput(['', '', '', '', '', '']);\n+  };\n \n-    return (\n-        <div>\n-            <div className=\"word-input\">\n-                {/* You can use the input elements for users to input the 6-letter word */}\n-                {userInput.map((value, index) => (\n-                    <input\n-                        key={index}\n-                        type=\"text\"\n-                        maxLength=\"1\"\n-                        value={value}\n-                        onChange={(e) => handleInputChange(index, e.target.value)}\n-                    />\n-                ))}\n-            </div>\n+  return (\n+    <div className=\"center-container\">\n+      <div className=\"word-input\">\n+        {userInput.map((value, index) => (\n+          <input\n+            key={index}\n+            type=\"text\"\n+            maxLength=\"1\"\n+            value={value}\n+            onChange={(e) => handleInputChange(index, e.target.value)}\n+          />\n+        ))}\n+      </div>\n \n-            <button className=\"navigation-button\" onClick={submitWord}>Submit</button>\n-            <button className=\"navigation-button\" onClick={resetGame}>Reset</button>\n+      <div className=\"button-container\">\n+        <button onClick={submitWord}>Submit</button>\n+        <button onClick={resetGame}>Reset</button>\n+      </div>\n \n-            {/* Add other UI elements for displaying attempts, clues, etc. */}\n-        </div>\n-    );\n+      {/* Add other UI elements for displaying attempts, clues, etc. */}\n+    </div>\n+  );\n };\n \n export default Normal;\n"
                }
            ],
            "date": 1700001280882,
            "name": "Commit-0",
            "content": "import React from 'react';\n\n\n\nconst Normal = () => {\n    return (\n        < div >\n            Normal\n        </div >\n    );\n}\n\nexport default Normal;\n"
        }
    ]
}