{
    "sourceFile": "src/WordleProject/index.css",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1700002179122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1700002218353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,3 @@\n-/* styles.css */\n-@import 'tailwindcss/base';\n-@import 'tailwindcss/components';\n-@import 'tailwindcss/utilities';\n\\ No newline at end of file\n+@tailwind base;\n+@tailwind components;\n+@tailwind utilities;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1700002252457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3 @@\n+@tailwind base;\n+@tailwind components;\n+@tailwind utilities;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1700002259833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,3 @@\n @tailwind base;\n @tailwind components;\n-@tailwind utilities;\n-@tailwind base;\n-@tailwind components;\n @tailwind utilities;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1700005458036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,124 @@\n-@tailwind base;\n-@tailwind components;\n-@tailwind utilities;\n\\ No newline at end of file\n+为了确保模态框内容出现在按钮下方，你可以使用 CSS 定位和调整模态框的位置。下面是相应的修改：\n+\n+```jsx\n+// Modal.jsx\n+import ReactDOM from \"react-dom\";\n+import { useEffect } from \"react\";\n+\n+function Modal({ onClose, children, actionBar }) {\n+    useEffect(() => {\n+        document.body.classList.add('overflow-hidden');\n+        return () => {\n+            document.body.classList.remove('overflow-hidden');\n+        };\n+    }, []);\n+\n+    return ReactDOM.createPortal(\n+        <div className=\"modal-overlay\">\n+            <div className=\"modal-content\">\n+                <div className=\"modal-close\" onClick={onClose}>&times;</div>\n+                <div className=\"modal-body\">\n+                    {children}\n+                </div>\n+                <div className=\"modal-action-bar\">\n+                    {actionBar}\n+                </div>\n+            </div>\n+        </div>,\n+        document.getElementById(\"modal-container\")\n+    );\n+}\n+\n+export default Modal;\n+```\n+\n+```jsx\n+// App.jsx\n+import Modal from \"../Components/Modal\";\n+import { useState } from \"react\";\n+\n+function App() {\n+    const [showModal, setShowModal] = useState(false);\n+\n+    const handleClick = () => {\n+        setShowModal(true);\n+    };\n+\n+    const handleClose = () => {\n+        setShowModal(false);\n+    };\n+\n+    const actionBar = (\n+        <div>\n+            <button onClick={handleClose}>\n+                I Accept\n+            </button>\n+        </div>\n+    );\n+\n+    const modal = (\n+        <Modal onClose={handleClose} actionBar={actionBar}>\n+            <p>\n+                Here is an important agreement for you to accept\n+            </p>\n+        </Modal>\n+    );\n+\n+    return (\n+        <div className=\"app-container\">\n+            <h2 className=\"app-title\">Welcome to Wordle Game!</h2>\n+            <p className=\"app-description\">Click the buttons to choose difficulty ʕ •ᴥ•ʔ</p>\n+            <button onClick={handleClick} className=\"open-modal-button\">\n+                Open Modal\n+            </button>\n+            {showModal && modal}\n+        </div>\n+    );\n+}\n+\n+export default App;\n+```\n+\n+然后，你可以在你的 CSS 文件中添加以下样式：\n+\n+```css\n+/* Add these styles to your CSS file */\n+\n+.modal-overlay {\n+    position: fixed;\n+    top: 0;\n+    left: 0;\n+    width: 100%;\n+    height: 100%;\n+    background: rgba(0, 0, 0, 0.5);\n+    display: flex;\n+    justify-content: center;\n+    align-items: center;\n+}\n+\n+.modal-content {\n+    background: white;\n+    padding: 20px;\n+    border-radius: 8px;\n+    position: relative;\n+    width: 300px; /* Adjust the width as needed */\n+}\n+\n+.modal-close {\n+    position: absolute;\n+    top: 10px;\n+    right: 10px;\n+    cursor: pointer;\n+}\n+\n+.modal-body {\n+    margin-bottom: 20px;\n+}\n+\n+.modal-action-bar {\n+    display: flex;\n+    justify-content: flex-end;\n+}\n+```\n+\n+这样，模态框内容应该会在按钮下方显示。你可以根据需要进行调整。\n\\ No newline at end of file\n"
                },
                {
                    "date": 1700005474470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,90 +1,4 @@\n-为了确保模态框内容出现在按钮下方，你可以使用 CSS 定位和调整模态框的位置。下面是相应的修改：\n-\n-```jsx\n-// Modal.jsx\n-import ReactDOM from \"react-dom\";\n-import { useEffect } from \"react\";\n-\n-function Modal({ onClose, children, actionBar }) {\n-    useEffect(() => {\n-        document.body.classList.add('overflow-hidden');\n-        return () => {\n-            document.body.classList.remove('overflow-hidden');\n-        };\n-    }, []);\n-\n-    return ReactDOM.createPortal(\n-        <div className=\"modal-overlay\">\n-            <div className=\"modal-content\">\n-                <div className=\"modal-close\" onClick={onClose}>&times;</div>\n-                <div className=\"modal-body\">\n-                    {children}\n-                </div>\n-                <div className=\"modal-action-bar\">\n-                    {actionBar}\n-                </div>\n-            </div>\n-        </div>,\n-        document.getElementById(\"modal-container\")\n-    );\n-}\n-\n-export default Modal;\n-```\n-\n-```jsx\n-// App.jsx\n-import Modal from \"../Components/Modal\";\n-import { useState } from \"react\";\n-\n-function App() {\n-    const [showModal, setShowModal] = useState(false);\n-\n-    const handleClick = () => {\n-        setShowModal(true);\n-    };\n-\n-    const handleClose = () => {\n-        setShowModal(false);\n-    };\n-\n-    const actionBar = (\n-        <div>\n-            <button onClick={handleClose}>\n-                I Accept\n-            </button>\n-        </div>\n-    );\n-\n-    const modal = (\n-        <Modal onClose={handleClose} actionBar={actionBar}>\n-            <p>\n-                Here is an important agreement for you to accept\n-            </p>\n-        </Modal>\n-    );\n-\n-    return (\n-        <div className=\"app-container\">\n-            <h2 className=\"app-title\">Welcome to Wordle Game!</h2>\n-            <p className=\"app-description\">Click the buttons to choose difficulty ʕ •ᴥ•ʔ</p>\n-            <button onClick={handleClick} className=\"open-modal-button\">\n-                Open Modal\n-            </button>\n-            {showModal && modal}\n-        </div>\n-    );\n-}\n-\n-export default App;\n-```\n-\n-然后，你可以在你的 CSS 文件中添加以下样式：\n-\n-```css\n-/* Add these styles to your CSS file */\n-\n .modal-overlay {\n     position: fixed;\n     top: 0;\n     left: 0;\n@@ -100,9 +14,10 @@\n     background: white;\n     padding: 20px;\n     border-radius: 8px;\n     position: relative;\n-    width: 300px; /* Adjust the width as needed */\n+    width: 300px;\n+    /* Adjust the width as needed */\n }\n \n .modal-close {\n     position: absolute;\n@@ -117,8 +32,5 @@\n \n .modal-action-bar {\n     display: flex;\n     justify-content: flex-end;\n-}\n-```\n-\n-这样，模态框内容应该会在按钮下方显示。你可以根据需要进行调整。\n\\ No newline at end of file\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1700002179122,
            "name": "Commit-0",
            "content": "/* styles.css */\n@import 'tailwindcss/base';\n@import 'tailwindcss/components';\n@import 'tailwindcss/utilities';"
        }
    ]
}